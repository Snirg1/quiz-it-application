{"version":3,"sources":["firebase/firebase.js","screens/LoadingScreen/LoadingScreen.js","screens/Home/Home.js","screens/OneTimeDashboard/OneTimeDashboard.js","components/AddQuestionModal/AddQuestionModal.js","components/QuestionsTable.js","screens/CreateQuiz/CreateQuiz.js","screens/JoinQuiz/JoinQuiz.js","components/QuizCard/CreatedQuizCard.js","components/QuizCard/JoinedQuizCard.js","screens/UserDashboard/UserDashboard.js","screens/CreatedSuccesfully/CreatedSuccesfully.js","screens/NotFoundPage.js","screens/Attempted/AttemptedModal.js","screens/Attempted/AttemptQuiz.js","components/Sidebar/Sidebar.js","components/Appbar/Appbar.js","components/ResponsesTable.js","screens/Response/Responses.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","LoadingScreen","className","style","fontSize","color","width","height","type","Home","setUser","useState","loading","setLoading","uiConfig","signInflow","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","useEffect","isMounted","onAuthStateChanged","user","uid","currentUser","name","displayName","email","console","log","id","borderRadius","firebaseAuth","OneTimeDashboard","path","setPath","length","push","to","onClick","viewBox","xmlns","fill","d","transform","useStyles","makeStyles","theme","root","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","outline","buttons","AddQuestionModal","title","opType","opArray","index","addQuestionHandle","classes","React","open","setOpen","optionType","setOptionType","optionsArray","setOptionsArray","editedOption","setEditedOption","editOpIndex","setEditOpIndex","titleField","setTitleField","optionsRef","useRef","checkBoxRef","handleOpen","IconButton","EditRounded","Modal","disableEnforceFocus","autoFocus","value","onChange","e","target","placeholder","map","option","ind","disabled","checked","isCorrect","text","Icon","temp","saveEdited","SaveRounded","handleEdit","splice","deleteHandler","DeleteRounded","ref","current","arr","findIndex","op","forEach","alert","variant","tempArr","filter","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","headCells","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","secondary","main","lighten","light","primary","dark","flex","EnhancedTableToolbar","selected","setSelected","questionArray","setQuestionArray","Toolbar","clsx","Typography","component","element","Delete","margin","marginBottom","table","minWidth","border","clip","overflow","position","top","QuestionsTable","rows","question","options","choice","setOrder","setOrderBy","page","setPage","editQuestionHandle","emptyRows","Math","min","Paper","TableContainer","Table","size","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","role","tabIndex","selectedIndex","newSelected","concat","handleClick","scope","colSpan","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","CreateQuiz","quizTitle","questions","isOpen","editQuizHandle","setTitle","access","setAccesss","quizCode","setQuizCode","createQuiz","fetch","method","body","JSON","stringify","headers","result","json","quizId","autocomplete","Switch","JoinQuiz","valid","setValid","code","setCode","handleJoinQuiz","fontweight","onKeyPress","key","CreatedQuizCard","responses","setEditQuiz","fontWeight","JoinedQuizCard","score","UserDashboard","createdQuizzes","setCreatedQuizzes","attemptedQuizzes","setAttemptedQuizzes","editQuiz","fetchQuizData","results","quizData","createdQuiz","attemptedQuiz","dir","_id","submitData","quiz","totalQuestions","CreatedSuccesfully","match","Copy","setCopy","params","onCopy","NotFoundPage","textAlign","AttemptedModal","totalScore","showModal","error","AttemptQuiz","setQuestions","attemptedQuestions","setAttemptedQuestions","setQuizTitle","setResult","setShowModal","fetchQuiz","res","selectedOptions","handleOptionSelect","includes","i","submitQuiz","Sidebar","signOut","setSignOut","SidedbarData","icon","Dashboard","CName","MeetingRoom","CreateNewFolder","sidebar","setSidebar","showSidebar","MenuRounded","MenuOpenRounded","item","ExitToApp","Appbar","AccountCircle","StyledTableCell","withStyles","head","common","white","StyledTableRow","action","ResponsesTable","resp","Responses","setResponses","getResponses","finalResponse","App","createUserInDB","metadata","lastSignInTime","creationTime","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36ddedcd.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAp0IB-zmCINEGEYt7Hjru2ptOa_R9Rjrg\",\r\n  authDomain: \"the-other-side-e1c97.firebaseapp.com\",\r\n  projectId: \"the-other-side-e1c97\",\r\n  storageBucket: \"the-other-side-e1c97.appspot.com\",\r\n  messagingSenderId: \"1018488103082\",\r\n  appId: \"1:1018488103082:web:5d289c572205777652b0d3\",\r\n  measurementId: \"G-GN4J8VJEBB\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\nfirebase.auth();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"./LoadingScreen.css\";\r\n\r\nconst LoadingScreen = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <h1 className=\"blue\" style={{ fontSize: \"5rem\" }}>\r\n        <b>The Other Side</b>\r\n      </h1>\r\n      {/* <Loader color=\"#29455a\" width={130} height={130}  type=\"audio\" /> */}\r\n      <Loader color=\"#29455a\" width={130} height={130} type=\"BallTriangle\" />\r\n      {/* <Loader color=\"#29455a\" width={130} height={130}  type=\"Puff\" /> */}\r\n      {/* <Loader color=\"#29455a\" width={130} height={130} type=\"Bars\" /> */}\r\n      {/* <Loader color=\"#29455a\" width={130} height={130}  type=\"Circles\" /> */}\r\n    </div>\r\n  );\r\n};\r\nexport default LoadingScreen;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport \"./Home.css\";\r\nimport {StyledFirebaseAuth} from \"react-firebaseui\";\r\nimport firebase from \"../../firebase/firebase\";\r\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\r\n\r\n\r\nconst Home = ({setUser}) => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const uiConfig = {\r\n        signInflow: \"popup\",\r\n        signInOptions: [\r\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n        ],\r\n        callbacks: {\r\n            signInSuccessWithAuthResult: () => false,\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user && isMounted) {\r\n                setUser({\r\n                    uid: firebase.auth().currentUser.uid,\r\n                    name: firebase.auth().currentUser.displayName,\r\n                    email: firebase.auth().currentUser.email,\r\n                });\r\n                console.log(\"User Logged In\");\r\n            } else {\r\n                console.log(\"User Signed Out\");\r\n                setUser({});\r\n            }\r\n            console.log(\"auth change\");\r\n            if (isMounted) setLoading(false);\r\n        });\r\n\r\n        return () => (isMounted = false);\r\n\r\n    }, [setUser]);\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <LoadingScreen/>\r\n            ) : (\r\n                <div id=\"Home\">\r\n\r\n                    <div id=\"logo\">\r\n                        <div id=\"logo-name\">\r\n                            <b>The Other Side</b>\r\n                        </div>\r\n                        <div id=\"description\">\r\n                             Welcome!\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div id=\"login-card\">\r\n                        <label className=\"login-label\">\r\n                            <b>Login</b>\r\n                        </label>\r\n                        <StyledFirebaseAuth\r\n                            borderRadius=\"40px\"\r\n                            uiConfig={uiConfig}\r\n                            firebaseAuth={firebase.auth()}\r\n                        />}\r\n                    </div>\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./OneTimeDashboard.css\";\r\n\r\nconst OneTimeDashboard = ({ user }) => {\r\n  const [path, setPath] = useState(\"\");\r\n  // Path Redirection\r\n  const onDashboard = () => setPath(\"/dashboard\");\r\n  const onCreateQuiz = () => setPath(\"/create-quiz\");\r\n  const onJoinQuiz = () => setPath(\"/join-quiz\");\r\n\r\n  if (path.length > 0) return <Redirect push to={path} />;\r\n\r\n  return (\r\n    <div className=\"one-time-dashboard\">\r\n      <div id=\"dashboard-content\">\r\n        <div className=\"dash-btns\">\r\n          <h1 className=\"white\">\r\n            The<b> Other</b> Side\r\n          </h1>\r\n          <button className=\"button one-time-button\" onClick={onDashboard}>\r\n            Dashboard\r\n          </button>\r\n          <button className=\"button one-time-button\" onClick={onCreateQuiz}>\r\n            Create Quiz\r\n          </button>\r\n          <button className=\"button one-time-button\" onClick={onJoinQuiz}>\r\n            Join Quiz\r\n          </button>\r\n        </div>\r\n        <div className=\"blob-svg\">\r\n          <svg\r\n            className=\"blob-1\"\r\n            viewBox=\"0 0 200 200\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              fill=\"#FFE6E6\"\r\n              d=\"M55.6,-59.6C71.1,-53.2,82.1,-34.8,85.2,-15.3C88.2,4.2,83.3,24.7,73,41.7C62.7,58.6,46.8,72,29.8,75.4C12.7,78.9,-5.7,72.5,-21.3,64.3C-36.8,56.1,-49.6,46,-55.3,33.3C-61,20.6,-59.6,5.2,-56.6,-9.6C-53.6,-24.4,-48.8,-38.4,-39.1,-45.8C-29.4,-53.2,-14.7,-53.8,2.7,-57C20,-60.2,40.1,-65.9,55.6,-59.6Z\"\r\n              transform=\"translate(100 100)\"\r\n            />\r\n          </svg>\r\n\r\n          <svg\r\n            className=\"blob-3\"\r\n            viewBox=\"0 0 200 200\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              fill=\"#FFE6E6\"\r\n              d=\"M37.2,-46.1C50.9,-32.8,66.5,-23.6,68.1,-12.3C69.8,-0.9,57.5,12.6,48.4,27.5C39.3,42.4,33.3,58.7,22.7,62.7C12.1,66.7,-3,58.3,-21.7,54C-40.3,49.6,-62.5,49.2,-72.9,38.5C-83.4,27.8,-82.2,6.8,-75.6,-10.4C-69.1,-27.5,-57.2,-40.7,-43.7,-54C-30.2,-67.3,-15.1,-80.6,-1.7,-78.6C11.8,-76.6,23.5,-59.3,37.2,-46.1Z\"\r\n              transform=\"translate(100 100)\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OneTimeDashboard;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Modal, Icon, IconButton } from \"@material-ui/core\";\r\nimport \"./AddQuestionModal.css\";\r\nimport { DeleteRounded, EditRounded, SaveRounded } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // margin: \"10px\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: 0,\r\n    width: \"90%\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nexport default function AddQuestionModal({\r\n  type = \"add\",\r\n  title = \"\",\r\n  opType = \"radio\",\r\n  opArray,\r\n  index = -1,\r\n  addQuestionHandle,\r\n}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [optionType, setOptionType] = useState(\"radio\");\r\n  const [optionsArray, setOptionsArray] = useState([]);\r\n  const [editedOption, setEditedOption] = useState(null);\r\n  const [editOpIndex, setEditOpIndex] = useState(-1);\r\n  const [titleField, setTitleField] = useState(\"\");\r\n  const optionsRef = useRef(null);\r\n  const checkBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setTitleField(title);\r\n      setOptionType(opType);\r\n      if (opArray) setOptionsArray(opArray);\r\n    } else {\r\n      setTitleField(\"\");\r\n      setOptionsArray([]);\r\n      setOptionType(\"radio\");\r\n    }\r\n  }, [open, title, opType, opArray]);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const addQuestionCallBack = () => {\r\n    const tempArr = [...optionsArray];\r\n    if (optionsRef.current.value.length !== 0) {\r\n      // For radio options, set all other options incorrect\r\n      if (optionType === \"radio\" && checkBoxRef.current.checked)\r\n        tempArr.forEach((op) => (op.isCorrect = false));\r\n\r\n      tempArr.push({\r\n        text: optionsRef.current.value,\r\n        isCorrect: checkBoxRef.current.checked,\r\n      });\r\n    }\r\n    // Error Handling\r\n    if (!titleField.length && optionsArray.length < 2) {\r\n      alert(\"Please add Question and atleast 2 options.\");\r\n      return;\r\n    } else if (!titleField.length) {\r\n      alert(\"Please add Question.\");\r\n      return;\r\n    } else if (optionsArray.length < 2) {\r\n      alert(\"Number of Options must be greater than 1.\");\r\n      return;\r\n    }\r\n    const correctOp = optionsArray.filter((op) => op.isCorrect);\r\n    if (correctOp.length < 1) {\r\n      alert(\"No correct option was selected.\");\r\n      return;\r\n    }\r\n    if (index !== -1) addQuestionHandle(titleField, optionType, tempArr, index);\r\n    else addQuestionHandle(titleField, optionType, tempArr);\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const addOption = () => {\r\n    if (optionsRef.current.value.length === 0) return;\r\n\r\n    const arr = [...optionsArray];\r\n    if (\r\n      optionsArray.findIndex((op) => op.text === optionsRef.current.value) !==\r\n      -1\r\n    ) {\r\n      alert(\"Option already exists.\");\r\n      return;\r\n    }\r\n    if (optionType === \"radio\" && checkBoxRef.current.checked)\r\n      // For radio options, set all other options incorrect\r\n      arr.forEach((op) => (op.isCorrect = false));\r\n\r\n    arr.push({\r\n      text: optionsRef.current.value,\r\n      isCorrect: checkBoxRef.current.checked,\r\n    });\r\n    optionsRef.current.value = \"\";\r\n    checkBoxRef.current.checked = false;\r\n    setOptionsArray(arr);\r\n  };\r\n  const handleTypeChange = (e) => setOptionType(e.target.value);\r\n\r\n  const deleteHandler = (ind) => {\r\n    const temp = [...optionsArray];\r\n    temp.splice(ind, 1);\r\n    setOptionsArray(temp);\r\n    setEditOpIndex(-1);\r\n  };\r\n\r\n  const handleEdit = (ind) => {\r\n    if (editOpIndex === -1) {\r\n      setEditOpIndex(ind);\r\n      setEditedOption(optionsArray[ind].text);\r\n    }\r\n  };\r\n\r\n  const saveEdited = () => {\r\n    const temp = [...optionsArray];\r\n    temp[editOpIndex].text = editedOption;\r\n    setOptionsArray(temp);\r\n    setEditOpIndex(-1);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {type === \"add\" ? (\r\n        <button className=\"button\" onClick={handleOpen}>\r\n          Add Question\r\n        </button>\r\n      ) : (\r\n        <IconButton onClick={handleOpen}>\r\n          <EditRounded />\r\n        </IconButton>\r\n      )}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        disableEnforceFocus={true}\r\n      >\r\n        <div className={classes.paper}>\r\n          <div className=\"questionCard\">\r\n            <div id=\"title\">Question:</div>\r\n            <input\r\n              type=\"text\"\r\n              autoFocus\r\n              value={titleField}\r\n              onChange={(e) => setTitleField(e.target.value)}\r\n              className=\"input-text question\"\r\n              placeholder=\"Type Question Here\"\r\n            />\r\n            <select\r\n              id=\"select\"\r\n              placeholder=\"Select\"\r\n              onChange={handleTypeChange}\r\n            >\r\n              <option className=\"selectOp\" value=\"radio\">\r\n                Single Answer\r\n              </option>\r\n              <option className=\"selectOp\" value=\"check\">\r\n                Multiple Answers\r\n              </option>\r\n            </select>\r\n\r\n            <div className=\"option-div\">\r\n              <div className=\"options\" id=\"one-op\">\r\n                {optionsArray.map((option, ind) => (\r\n                  <div className=\"option\" key={ind}>\r\n                    <input\r\n                      type={optionType === \"radio\" ? \"radio\" : \"checkbox\"}\r\n                      disabled={true}\r\n                      className=\"radio-in\"\r\n                      name=\"option\"\r\n                      checked={option.isCorrect}\r\n                    />\r\n                    {editOpIndex === ind ? (\r\n                      <input\r\n                        value={editedOption}\r\n                        onChange={(e) => setEditedOption(e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      <div className=\"add-op\">{option.text}</div>\r\n                    )}\r\n                    {editOpIndex === ind ? (\r\n                      <Icon className=\"save-icon\" onClick={() => saveEdited()}>\r\n                        <SaveRounded />\r\n                      </Icon>\r\n                    ) : (\r\n                      <Icon\r\n                        className=\"edit-icon\"\r\n                        onClick={() => handleEdit(ind)}\r\n                      >\r\n                        <EditRounded />\r\n                      </Icon>\r\n                    )}\r\n                    <Icon\r\n                      className=\"delete-icon\"\r\n                      onClick={() => {\r\n                        deleteHandler(ind);\r\n                      }}\r\n                    >\r\n                      <DeleteRounded />\r\n                    </Icon>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"add-op\">\r\n              <div>\r\n                <input\r\n                  type={optionType === \"radio\" ? \"radio\" : \"checkbox\"}\r\n                  ref={checkBoxRef}\r\n                  className=\"radio-in\"\r\n                  name=\"option\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  ref={optionsRef}\r\n                  className=\"input-text op-text\"\r\n                  placeholder={`Option ${optionsArray.length + 1}`}\r\n                />\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                className=\"add-btn\"\r\n                value=\"+ Add\"\r\n                onClick={addOption}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={classes.buttons}>\r\n            <button className=\"add-btn\" onClick={handleClose}>\r\n              Close\r\n            </button>\r\n            <button\r\n              // disabled={!(optionsArray.length && titleField.length)}\r\n              className=\"button\"\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={addQuestionCallBack}\r\n            >\r\n              {type === \"add\" ? \"Add \" : \"Edit \"}\r\n              Question\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport AddQuestionModal from \"./AddQuestionModal/AddQuestionModal\";\r\n\r\nfunction createData(title, options, choice) {\r\n  return { title, options, choice };\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"title\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Question\",\r\n  },\r\n  { id: \"options\", numeric: true, disablePadding: false, label: \"Options\" },\r\n  { id: \"choice\", numeric: true, disablePadding: false, label: \"Choice\" },\r\n  { id: \"edit\", numeric: true, disablePadding: false, label: \"Edit\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const {\r\n    numSelected,\r\n    selected,\r\n    setSelected,\r\n    questionArray,\r\n    setQuestionArray,\r\n  } = props;\r\n\r\n  const deleteRow = () => {\r\n    const temp = [...questionArray];\r\n    // Delete the selected rows from QuestionsArray\r\n    selected.forEach((element) => {\r\n      const target = temp.findIndex((e) => e.title === element);\r\n      temp.splice(target, 1);\r\n    });\r\n\r\n    setQuestionArray(temp);\r\n    setSelected([]);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          QUESTIONS\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <IconButton onClick={deleteRow} aria-label=\"delete\">\r\n          <Delete />\r\n        </IconButton>\r\n      ) : null}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  selected: PropTypes.array,\r\n  setSelected: PropTypes.func,\r\n  questionArray: PropTypes.array,\r\n  setQuestionArray: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"95%\",\r\n    margin: \"5px\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function QuestionsTable({ questionArray, setQuestionArray }) {\r\n  const rows = questionArray.map((question) =>\r\n    createData(question.title, question.options, question.optionType)\r\n  );\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const editQuestionHandle = (title, optionType, options, index) => {\r\n    const temp = [...questionArray];\r\n    temp[index] = { title, optionType, options };\r\n    setQuestionArray(temp);\r\n  };\r\n\r\n  const rowsPerPage = 5;\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.title);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  // const handleChangeRowsPerPage = (event) => {\r\n  // \tsetRowsPerPage(parseInt(event.target.value, 10));\r\n  // \tsetPage(0);\r\n  // };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          questionArray={questionArray}\r\n          setQuestionArray={setQuestionArray}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.title);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.title}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          onClick={(event) => handleClick(event, row.title)}\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.title}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.options.length}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {row.choice === \"radio\" ? \"Single\" : \"Multiple\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <AddQuestionModal\r\n                          key={index}\r\n                          type=\"edit\"\r\n                          title={row.title}\r\n                          opType={row.choice}\r\n                          opArray={row.options}\r\n                          index={index}\r\n                          addQuestionHandle={editQuestionHandle}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 33 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          // onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./CreateQuiz.css\";\r\nimport AddQuestionModal from \"../../components/AddQuestionModal/AddQuestionModal\";\r\nimport QuestionsTable from \"../../components/QuestionsTable\";\r\nimport { Switch } from \"@material-ui/core\";\r\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\r\n\r\nconst CreateQuiz = ({\r\n  user,\r\n  quizTitle,\r\n  questions,\r\n\r\n  isOpen,\r\n  editQuizHandle,\r\n}) => {\r\n  const [questionArray, setQuestionArray] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [access, setAccesss] = useState(true);\r\n  const [loading, setLoading] = useState(\"stop\");\r\n  const [quizCode, setQuizCode] = useState(null);\r\n\r\n  const addQuestionHandle = (title, optionType, options) => {\r\n    const arr = [...questionArray];\r\n    arr.push({ title, optionType, options });\r\n    setQuestionArray(arr);\r\n  };\r\n  useEffect(() => {\r\n    if (quizTitle) {\r\n      setTitle(quizTitle);\r\n      setQuestionArray(questions);\r\n      setAccesss(isOpen);\r\n    }\r\n  }, [quizTitle, questions, isOpen]);\r\n\r\n  const createQuiz = async () => {\r\n    if (!(title.length || questionArray.length)) {\r\n      alert(\"Please add title and questions.\");\r\n      return;\r\n    } else if (!title.length) {\r\n      alert(\"Please add Quiz title.\");\r\n      return;\r\n    } else if (!questionArray.length) {\r\n      alert(\"Please add any questions.\");\r\n      return;\r\n    }\r\n    console.log(\"Quiz Creation Starts...\");\r\n    setLoading(\"start\");\r\n    try {\r\n      const result = await fetch(\"/API/quizzes/create\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          title,\r\n          uid: user.uid,\r\n          questions: questionArray,\r\n          isOpen: access,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      console.log(\"Quiz posted ! \");\r\n      const body = await result.json();\r\n      console.log(\"Quiz Code : \", body.quizId);\r\n      setQuizCode(body.quizId);\r\n    } catch (e) {\r\n      console.log(\"Quiz creation error : \", e);\r\n      setLoading(\"error\");\r\n    }\r\n  };\r\n  if (quizCode)\r\n    return <Redirect push to={`/created-succesfully/${quizCode}`} />;\r\n\r\n  if (loading === \"start\") return <LoadingScreen />;\r\n\r\n  return (\r\n    <div id=\"main-body\">\r\n      <div id=\"create-quiz-body\">\r\n        <div className=\"quiz-header\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            id=\"quiz-title\"\r\n            placeholder=\"Untitled Quiz\"\r\n            autoFocus\r\n            autocomplete=\"off\"\r\n          />\r\n        </div>\r\n        <div className=\"controls\">\r\n          <AddQuestionModal addQuestionHandle={addQuestionHandle} />\r\n          <div className=\"switch\">\r\n            <Switch\r\n              checked={access}\r\n              onChange={(e) => setAccesss(e.target.checked)}\r\n              color=\"secondary\"\r\n              name=\"access\"\r\n            />\r\n            <h4>{access ? \"Public\" : \"Private\"}</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"questionTable\">\r\n        <QuestionsTable\r\n          questionArray={questionArray}\r\n          setQuestionArray={setQuestionArray}\r\n        />\r\n      </div>\r\n      <div>\r\n        {quizTitle && (\r\n          <button className=\"add-btn\" onClick={() => editQuizHandle()}>\r\n            Close\r\n          </button>\r\n        )}\r\n        <button\r\n          // disabled={!(title.length && questionArray.length)}\r\n          className=\"button wd-200\"\r\n          onClick={() => {\r\n            if (quizTitle) editQuizHandle(title, questionArray, access);\r\n            else createQuiz();\r\n          }}\r\n        >\r\n          {quizTitle ? \"Save \" : \"Create \"}\r\n          Quiz\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateQuiz;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./JoinQuiz.css\";\r\n\r\nconst JoinQuiz = () => {\r\n  const [valid, setValid] = useState(\"false\");\r\n  const [code, setCode] = useState(\"\");\r\n\r\n  const handleJoinQuiz = () => {\r\n    if (code.length) setValid(\"attempt-quiz\");\r\n  };\r\n  if (valid !== \"false\") return <Redirect push to={`/${valid}/${code}`} />;\r\n  return (\r\n    <div id=\"join-quiz\">\r\n      <div id=\"join-quiz-div\">\r\n        <div id=\"logo-name\">\r\n          <b style={{ fontweight: 600 }}>Quiz</b>App\r\n        </div>\r\n        <input\r\n          value={code}\r\n          onChange={(e) => setCode(e.target.value)}\r\n          id=\"q-code\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Quiz Code\"\r\n          autoFocus\r\n          onKeyPress={(event) => {\r\n            if (event.key === \"Enter\") handleJoinQuiz();\r\n          }}\r\n        />\r\n        <button className=\"join-button\" onClick={handleJoinQuiz}>\r\n          Join Quiz\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinQuiz;\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport { EditRounded } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./QuizCard.css\";\r\n\r\nconst CreatedQuizCard = ({\r\n  title,\r\n  responses,\r\n  code,\r\n  questions,\r\n  isOpen,\r\n  index,\r\n  setEditQuiz,\r\n}) => {\r\n  return (\r\n    <div className=\"quiz-card\">\r\n      <div>\r\n        <h1 id=\"created-quiz-title\">{title}</h1>\r\n        <p className=\"card-code\">Code: {code}</p>\r\n      </div>\r\n      <div id=\"horizontal-line\"></div>\r\n      <div id=\"row\">\r\n        <div id=\"responses\">\r\n          <Link to={`/responses/${code}`} style={{ fontWeight: \"bold\" }}>\r\n            Responses : {responses}\r\n          </Link>\r\n        </div>\r\n        <div id=\"questions\">Questions : {questions}</div>\r\n      </div>\r\n      <div className=\"bottom-bar\">\r\n        {isOpen ? <div id=\"open\">open</div> : <div id=\"closed\">closed</div>}\r\n        <IconButton onClick={() => setEditQuiz([index])}>\r\n          <EditRounded />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatedQuizCard;\r\n","import React from \"react\";\r\nimport \"./QuizCard.css\";\r\n\r\nconst JoinedQuizCard = ({ title, score, questions }) => {\r\n  return (\r\n    <div className=\"quiz-card\">\r\n      <h1 id=\"created-quiz-title\">{title}</h1>\r\n      <div id=\"horizontal-line\"></div>\r\n      <div id=\"row\">\r\n        <div id=\"responses\">Score : {score}</div>\r\n        <div id=\"questions\">Questions : {questions}</div>\r\n      </div>\r\n      <div id=\"open\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinedQuizCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./UserDashBoard.css\";\r\nimport CreatedQuizCard from \"../../components/QuizCard/CreatedQuizCard\";\r\nimport JoinedQuizCard from \"../../components/QuizCard/JoinedQuizCard\";\r\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\r\nimport CreateQuiz from \"../CreateQuiz/CreateQuiz\";\r\n\r\nconst UserDashboard = ({ user }) => {\r\n  const [createdQuizzes, setCreatedQuizzes] = useState([]);\r\n  const [attemptedQuizzes, setAttemptedQuizzes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editQuiz, setEditQuiz] = useState([]);\r\n  // Fetch Data from the API\r\n  useEffect(() => {\r\n    if (!user.uid) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    const fetchQuizData = async () => {\r\n      const results = await fetch(`/API/users/${user.uid}`);\r\n      const quizData = await results.json();\r\n      if (quizData.createdQuiz) setCreatedQuizzes(quizData.createdQuiz);\r\n      if (quizData.attemptedQuiz) setAttemptedQuizzes(quizData.attemptedQuiz);\r\n      setLoading(false);\r\n    };\r\n    if (user) fetchQuizData();\r\n  }, [user]);\r\n\r\n  const editQuizHandle = async (title, questions, isOpen) => {\r\n    if (!title) setEditQuiz([]);\r\n    else {\r\n      setLoading(true);\r\n      console.dir({\r\n        quizId: createdQuizzes[editQuiz]._id,\r\n        uid: user.uid,\r\n        title,\r\n        questions,\r\n        isOpen,\r\n      });\r\n      const results = await fetch(\"/API/quizzes/edit\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          quizId: createdQuizzes[editQuiz]._id,\r\n          uid: user.uid,\r\n          title,\r\n          questions,\r\n          isOpen,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const submitData = await results.json();\r\n      console.dir(submitData);\r\n      const temp = [...createdQuizzes];\r\n      temp[editQuiz[0]].title = title;\r\n      temp[editQuiz[0]].questions = questions;\r\n      temp[editQuiz[0]].isOpen = isOpen;\r\n      setCreatedQuizzes(temp);\r\n      setEditQuiz([]);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  if (editQuiz.length)\r\n    return (\r\n      <CreateQuiz\r\n        user={user}\r\n        quizTitle={createdQuizzes[editQuiz].title}\r\n        questions={createdQuizzes[editQuiz].questions}\r\n        isOpen={createdQuizzes[editQuiz].isOpen}\r\n        editQuizHandle={editQuizHandle}\r\n      />\r\n    );\r\n  return (\r\n    <div className=\"dash-body\">\r\n      <div className=\"quizzes\">\r\n        <div className=\"heading\">\r\n          <div className=\"line-left\" />\r\n          <h2>Created </h2>\r\n          <div className=\"line\" />\r\n        </div>\r\n        <div className=\"card-holder\">\r\n          {createdQuizzes.map((quiz, key) => (\r\n            <CreatedQuizCard\r\n              key={key}\r\n              index={key}\r\n              setEditQuiz={setEditQuiz}\r\n              title={quiz.title}\r\n              code={quiz._id}\r\n              responses={quiz.responses}\r\n              questions={quiz.questions.length}\r\n              isOpen={quiz.isOpen}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"quizzes\">\r\n        <div className=\"heading\">\r\n          <div className=\"line-left\" />\r\n          <h2>Attempted </h2>\r\n          <div className=\"line\" />\r\n        </div>\r\n        <div className=\"card-holder\">\r\n          {attemptedQuizzes.map((quiz, key) => (\r\n            <JoinedQuizCard\r\n              key={key}\r\n              title={quiz.title}\r\n              score={quiz.responses[0].score}\r\n              questions={quiz.totalQuestions}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./CreatedSuccesfully.css\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst CreatedSuccesfully = ({ match }) => {\r\n  const [Copy, setCopy] = useState(\"copy\");\r\n  return (\r\n    <div id=\"created-quiz\">\r\n      <div id=\"created-quiz-div\">\r\n        <div id=\"message\">\r\n          <h2 className=\"b\">Quiz Created Successfully!</h2>\r\n          <p>Share the follwong code with your students</p>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          // className='input-text'\r\n          id={Copy}\r\n          value={match.params.quizCode}\r\n          disabled={true}\r\n          // onChange={(e) => {}}\r\n        />\r\n        <CopyToClipboard\r\n          text={match.params.quizCode}\r\n          onCopy={() => {\r\n            setCopy(\"copied\");\r\n          }}\r\n        >\r\n          <button className=\"button wd-200\">\r\n            {Copy === \"copy\" ? \"Copy Code\" : \"Code Copied!\"}\r\n          </button>\r\n        </CopyToClipboard>\r\n        <Link to={\"/dashboard\"}>\r\n          <button className=\"button wd-200\">Dashboard</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreatedSuccesfully;\r\n","import {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst NotFoundPage = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <h1>404 Page Not Found!</h1>\r\n            <div id=\"logo-name\">\r\n                The<b> Other </b> Side\r\n            </div>\r\n            <h3>\r\n                <Link to=\"/\">Click here</Link> and\r\n                Go back to the Dashboard.\r\n            </h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // margin: \"10px\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(10, 10),\r\n    borderRadius: \"20px\",\r\n    // display:\"flex\",\r\n    // alignItems:\"center\",\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst AttemptedModal = ({ result, totalScore, showModal }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(showModal);\r\n\r\n  useEffect(() => {\r\n    setOpen(showModal);\r\n  }, [showModal]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        disableEnforceFocus={true}\r\n      >\r\n        <div className={classes.paper}>\r\n          <h2>Quiz Attempted Successfully.</h2>\r\n          <h1 className=\"score_h2\">\r\n            {result.error\r\n              ? \"Not Submitted ! \"\r\n              : `Score: ${result.score}/${totalScore}`}\r\n          </h1>\r\n          <Link to={\"/dashboard\"}>\r\n            <button className=\"button wd-200\">Dashboard</button>\r\n          </Link>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttemptedModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"../../firebase/firebase\";\r\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\r\nimport AttemptedModal from \"./AttemptedModal\";\r\n\r\nconst AttemptQuiz = ({ match }) => {\r\n  const quizCode = match.params.quizCode;\r\n  const [questions, setQuestions] = useState([]);\r\n  const [attemptedQuestions, setAttemptedQuestions] = useState([]);\r\n  const [quizTitle, setQuizTitle] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [result, setResult] = useState({});\r\n  const [showModal, setShowModal] = useState(false);\r\n  const uid = firebase.auth().currentUser.uid;\r\n  useEffect(() => {\r\n    const fetchQuiz = async () => {\r\n      const res = await fetch(\"/API/quizzes/join\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ quizId: quizCode, uid }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const quizData = await res.json();\r\n      setLoading(false);\r\n      if (quizData.error) setQuizTitle(quizData.error);\r\n      else {\r\n        setQuizTitle(quizData.title);\r\n        setQuestions(quizData.questions);\r\n        const temp = quizData.questions.map((question) => {\r\n          return {\r\n            id: question.id,\r\n            title: question.title,\r\n            optionType: question.optionType,\r\n            selectedOptions: [],\r\n          };\r\n        });\r\n        setAttemptedQuestions(temp);\r\n      }\r\n    };\r\n    fetchQuiz();\r\n  }, [quizCode, uid]);\r\n\r\n  const handleOptionSelect = (e, option, index) => {\r\n    const temp = [...attemptedQuestions];\r\n    const options = temp[index].selectedOptions;\r\n    console.log(\"index:\" + index);\r\n    if (!options.includes(option) && e.target.checked) {\r\n      if (attemptedQuestions[index].optionType === \"radio\") options[0] = option;\r\n      else options.push(option);\r\n    }\r\n    if (options.includes(option) && !e.target.checked) {\r\n      const i = options.indexOf(option);\r\n      options.splice(i, 1);\r\n    }\r\n    temp[index].selectedOptions = options;\r\n    setAttemptedQuestions(temp);\r\n  };\r\n\r\n  const submitQuiz = async () => {\r\n    // send attemped Questions to backend\r\n    try {\r\n      const res = await fetch(\"/API/quizzes/submit\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          uid,\r\n          quizId: quizCode,\r\n          questions: attemptedQuestions,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const body = await res.json();\r\n      setResult(body);\r\n      setShowModal(true);\r\n      console.log(\"res body : \", body);\r\n    } catch (e) {\r\n      console.log(\"Error Submitting quiz\", e);\r\n    }\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n  // For Quiz not Found\r\n  if (quizTitle === \"ERR:QUIZ_NOT_FOUND\")\r\n    return (\r\n      <div className=\"loading\">\r\n        <h1>404 Quiz Not Found!</h1>\r\n        <div id=\"logo-name\">\r\n          <b>Quiz</b>App\r\n        </div>\r\n        <h3>\r\n          Go back to <Link to=\"/join-quiz\">Join Quiz </Link>Page.\r\n        </h3>\r\n      </div>\r\n    );\r\n  // For Quiz not accessible\r\n  else if (quizTitle === \"ERR:QUIZ_ACCESS_DENIED\")\r\n    return (\r\n      <div className=\"loading\">\r\n        <h2>\r\n          Quiz Access is Not Granted by the Creator. Please contact Quiz\r\n          Creator.\r\n        </h2>\r\n        <div id=\"logo-name\">\r\n          <b>Quiz</b>App\r\n        </div>\r\n        <h3>\r\n          Go back to <Link to=\"/join-quiz\">Join Quiz </Link>Page.\r\n        </h3>\r\n      </div>\r\n    );\r\n  // For quiz already attempted\r\n  else if (quizTitle === \"ERR:QUIZ_ALREADY_ATTEMPTED\")\r\n    return (\r\n      <div className=\"loading\">\r\n        <h2>You have already taken the Quiz.</h2>\r\n        <div id=\"logo-name\">\r\n          <b>Quiz</b>App\r\n        </div>\r\n        <h3>\r\n          Go back to <Link to=\"/join-quiz\">Join Quiz </Link>Page.\r\n        </h3>\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <div id=\"main-body\">\r\n        <div id=\"create-quiz-body\">\r\n          <div className=\"quiz-header\">\r\n            <h2>{quizTitle}</h2>\r\n          </div>\r\n          {questions.map((question, index) => (\r\n            <div className=\"attempQuestionCard\" key={index}>\r\n              <div id=\"title\">{question.title}</div>\r\n              <div className=\"option-div\">\r\n                {question.options.map((option, ind) => (\r\n                  <div className=\"option\" key={ind}>\r\n                    {question.optionType === \"radio\" ? (\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`option${index}`}\r\n                        onChange={(e) =>\r\n                          handleOptionSelect(e, option.text, index)\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name=\"option\"\r\n                        onChange={(e) =>\r\n                          handleOptionSelect(e, option.text, index)\r\n                        }\r\n                      />\r\n                    )}\r\n                    <label className=\"label\" style={{ padding: \"0px 5px\" }}>\r\n                      {option.text}\r\n                    </label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <button className=\"button wd-200\" onClick={submitQuiz}>\r\n            Submit\r\n          </button>\r\n          <AttemptedModal\r\n            result={result}\r\n            showModal={showModal}\r\n            totalScore={questions.length}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default AttemptQuiz;\r\n","import React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport './Sidebar.css'\r\nimport firebase from '../../firebase/firebase'\r\nimport { Icon } from '@material-ui/core'\r\nimport {\r\n\tCreateNewFolder,\r\n\tDashboard,\r\n\tExitToApp,\r\n\tMeetingRoom,\r\n\tMenuOpenRounded,\r\n\tMenuRounded,\r\n} from '@material-ui/icons'\r\n\r\nfunction Sidebar() {\r\n\tconst [signOut, setSignOut] = useState(false)\r\n\tconst SidedbarData = [\r\n\t\t{\r\n\t\t\ttitle: 'Dashboard',\r\n\t\t\tpath: '/dashboard',\r\n\t\t\ticon: <Dashboard />,\r\n\t\t\tCName: 'nav-text',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Join Quiz',\r\n\t\t\tpath: '/join-quiz',\r\n\t\t\ticon: <MeetingRoom />,\r\n\t\t\tCName: 'nav-text',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Create Quiz',\r\n\t\t\tpath: '/create-quiz',\r\n\t\t\ticon: <CreateNewFolder />,\r\n\t\t\tCName: 'nav-text',\r\n\t\t},\r\n\t]\r\n\tconst [sidebar, setSidebar] = useState(false)\r\n\tconst showSidebar = () => setSidebar(!sidebar)\r\n\tif (signOut) return <Redirect to='/' />\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Icon className='menu-bars' onClick={showSidebar}>\r\n\t\t\t\t<MenuRounded />\r\n\t\t\t</Icon>\r\n\t\t\t{/* <FaIcons.FaBars  onClick={} /> */}\r\n\t\t\t<nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n\t\t\t\t<ul className='nav-menu-items' onClick={showSidebar}>\r\n\t\t\t\t\t<li className='navbar-toggle'>\r\n\t\t\t\t\t\t<Icon>\r\n\t\t\t\t\t\t\t<MenuOpenRounded fontSize='large' />\r\n\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t{SidedbarData.map((item, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={index} className='nav-text'>\r\n\t\t\t\t\t\t\t\t<Link to={item.path}>\r\n\t\t\t\t\t\t\t\t\t<Icon>{item.icon}</Icon>\r\n\t\t\t\t\t\t\t\t\t<span className='nav-item-title'>{item.title}</span>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t{/* Sign Out Button */}\r\n\t\t\t\t\t<li className='nav-text sign-out'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tconsole.log('clicked')\r\n\t\t\t\t\t\t\t\t// setUser({})\r\n\t\t\t\t\t\t\t\tfirebase.auth().signOut()\r\n\t\t\t\t\t\t\t\tsetSignOut(true)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Icon>\r\n\t\t\t\t\t\t\t\t<ExitToApp />\r\n\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t<span className='nav-item-title'>{'SignOut'}</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Sidebar\r\n","import React from \"react\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport \"./Appbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\nconst Appbar = ({ user, setUser }) => {\r\n  return (\r\n    <div className=\"appbar\">\r\n      <div className=\"slider\">\r\n        <Sidebar />\r\n        <Link to=\"/\" className=\"home\">\r\n          The <b>Other</b> Side\r\n        </Link>\r\n      </div>\r\n      <div className=\"appbar-user\">\r\n        <Icon>\r\n          <AccountCircle />\r\n        </Icon>\r\n        <p>{user.name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appbar;\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#d81e5b\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData({ name, email, score }) {\r\n  return { name, email, score };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  paper: {\r\n    borderRadius: 15,\r\n  },\r\n});\r\n\r\nexport default function ResponsesTable({ responses }) {\r\n  const classes = useStyles();\r\n  const rows = responses.map((resp) => createData(resp));\r\n  return (\r\n    <TableContainer className={classes.paper} component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Name</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Email Address</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Score</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"center\">{row.email}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.score}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\r\nimport firebase from \"../../firebase/firebase\";\r\nimport ResponsesTable from \"../../components/ResponsesTable\";\r\n\r\nconst Responses = ({ match }) => {\r\n  const quizId = match.params.quizCode;\r\n  const uid = firebase.auth().currentUser.uid;\r\n  const [loading, setLoading] = useState(true);\r\n  const [responses, setResponses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getResponses = async () => {\r\n      const res = await fetch(\"/API/quizzes/responses\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ quizCode: quizId, uid }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const result = await res.json();\r\n      console.log(result);\r\n      setResponses(result.finalResponse);\r\n      setLoading(false);\r\n    };\r\n    getResponses();\r\n  }, [quizId, uid]);\r\n  console.log(responses);\r\n  if (loading) return <LoadingScreen />;\r\n  else\r\n    return (\r\n      <div className=\"margin-top\">\r\n        <h2>Responses</h2>\r\n        <ResponsesTable responses={responses} />\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Responses;\r\n","import {Switch, Route} from \"react-router-dom\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport firebase from \"./firebase/firebase\";\r\n\r\n// Stylesheet\r\nimport \"./App.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n// Components\r\nimport Home from \"./screens/Home/Home\";\r\nimport OneTimeDashBoard from \"./screens/OneTimeDashboard/OneTimeDashboard\";\r\nimport CreateQuiz from \"./screens/CreateQuiz/CreateQuiz\";\r\nimport JoinQuiz from \"./screens/JoinQuiz/JoinQuiz\";\r\nimport UserDashboard from \"./screens/UserDashboard/UserDashboard\";\r\nimport CreatedSuccesfully from \"./screens/CreatedSuccesfully/CreatedSuccesfully\";\r\nimport NotFoundPage from \"./screens/NotFoundPage\";\r\nimport AttemptQuiz from \"./screens/Attempted/AttemptQuiz\";\r\nimport Appbar from \"./components/Appbar/Appbar\";\r\nimport Responses from \"./screens/Response/Responses\";\r\n\r\nconst App = () => {\r\n    const [user, setUser] = useState({});\r\n    useEffect(() => {\r\n        const createUserInDB = async () => {\r\n            if (user.uid)\r\n                if (firebase.auth().currentUser.metadata.lastSignInTime ===\r\n                    firebase.auth().currentUser.metadata.creationTime\r\n                ) {\r\n                    try {\r\n                        await fetch(\"/API/users/create\", {\r\n                            method: \"POST\",\r\n                            body: JSON.stringify({uid: user.uid, name: user.name, email: user.email}),\r\n                            headers: {\"Content-Type\": \"application/json\"}\r\n                        });\r\n                        console.log(\"posted\");\r\n                    } catch (error) {\r\n                        console.log(\"User Creation Error: \", error);\r\n                    }\r\n                }\r\n        };\r\n        createUserInDB();\r\n    }, [user]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {!firebase.auth().currentUser ? (\r\n                <Home setUser={setUser}/>\r\n            ) : (\r\n                <>\r\n                    <div>\r\n                        <Appbar user={user} setUser={setUser}/>\r\n                    </div>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <OneTimeDashBoard user={user}/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/dashboard\">\r\n                            <UserDashboard user={user}/>\r\n                        </Route>\r\n                        <Route path=\"/create-quiz\">\r\n                            <CreateQuiz user={user}/>\r\n                        </Route>\r\n                        <Route\r\n                            path=\"/created-succesfully/:quizCode\"\r\n                            component={CreatedSuccesfully}\r\n                        />\r\n                        <Route path=\"/join-quiz\">\r\n                            <JoinQuiz user={user}/>\r\n                        </Route>\r\n                        <Route path=\"/attempt-quiz/:quizCode\" component={AttemptQuiz}/>\r\n                        <Route path=\"/responses/:quizCode\" component={Responses}/>\r\n                        <Route component={NotFoundPage}/>\r\n                    </Switch>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}