{"version":3,"sources":["firebase/firebase.js","screens/LoadingScreen/LoadingScreen.js","screens/Home/Home.js","screens/OneTimeDashboard/OneTimeDashboard.js","components/AddQuestionModal/AddQuestionModal.js","components/QuestionsTable.js","screens/CreateQuiz/CreateQuiz.js","screens/JoinQuiz/JoinQuiz.js","components/QuizCard/CreatedQuizCard.js","components/QuizCard/JoinedQuizCard.js","screens/UserDashboard/UserDashboard.js","screens/CreatedSuccesfully/CreatedSuccesfully.js","screens/NotFoundPage.js","screens/Attempted/AttemptedModal.js","screens/Attempted/AttemptQuiz.js","components/Sidebar/Sidebar.js","components/Appbar/Appbar.js","components/ResponsesTable.js","screens/Response/Responses.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","LoadingScreen","className","style","fontSize","fontweight","color","width","height","type","Home","setUser","useState","loading","setLoading","uiConfig","signInflow","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","useEffect","isMounted","onAuthStateChanged","user","uid","currentUser","name","displayName","email","console","log","id","borderRadius","firebaseAuth","OneTimeDashboard","path","setPath","length","push","to","onClick","viewBox","xmlns","fill","d","transform","useStyles","makeStyles","theme","root","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","outline","buttons","AddQuestionModal","title","opType","opArray","index","addQuestionHandle","classes","React","open","setOpen","optionType","setOptionType","optionsArray","setOptionsArray","editedOption","setEditedOption","editOpIndex","setEditOpIndex","titleField","setTitleField","optionsRef","useRef","checkBoxRef","handleOpen","IconButton","EditRounded","Modal","disableEnforceFocus","autoFocus","value","onChange","e","target","placeholder","map","option","ind","disabled","checked","isCorrect","text","Icon","temp","saveEdited","SaveRounded","handleEdit","splice","deleteHandler","DeleteRounded","ref","current","arr","findIndex","op","forEach","alert","variant","tempArr","filter","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","headCells","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","secondary","main","lighten","light","primary","dark","flex","EnhancedTableToolbar","selected","setSelected","questionArray","setQuestionArray","Toolbar","clsx","Typography","component","element","Delete","margin","marginBottom","table","minWidth","border","clip","overflow","position","top","QuestionsTable","rows","question","options","choice","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","editQuestionHandle","emptyRows","Math","min","Paper","TableContainer","Table","size","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","role","tabIndex","selectedIndex","newSelected","concat","handleClick","scope","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","CreateQuiz","quizTitle","questions","isOpen","editQuizHandle","setTitle","access","setAccesss","quizCode","setQuizCode","createQuiz","fetch","method","body","JSON","stringify","headers","result","json","quizId","autocomplete","Switch","JoinQuiz","valid","setValid","code","setCode","handleJoinQuiz","onKeyPress","key","CreatedQuizCard","responses","setEditQuiz","fontWeight","JoinedQuizCard","score","UserDashboard","createdQuizzes","setCreatedQuizzes","attemptedQuizzes","setAttemptedQuizzes","editQuiz","fetchQuizData","results","quizData","createdQuiz","attemptedQuiz","dir","_id","submitData","quiz","totalQuestions","CreatedSuccesfully","match","Copy","setCopy","params","onCopy","NotFoundPage","textAlign","AttemptedModal","totalScore","showModal","maxScoreLocal","setMaxScoreLocal","isNewRecord","setIsNewRecord","checkNewRecord","res","resJson","maxScore","error","toFixed","AttemptQuiz","setQuestions","attemptedQuestions","setAttemptedQuestions","setQuizTitle","setQuizCorrectAnswers","setResult","setShowModal","currQuestionIndex","setCurrQuestionIndex","questionsPerPage","fetchQuiz","answers","selectedOptions","fetchUserPostionInQuiz","lastQuestion","handleOptionSelect","includes","i","submitQuiz","onPauseGame","currPageQuestions","buttonIndex","currentTarget","handleRadioClick","trigger","href","rel","Sidebar","signOut","setSignOut","SidedbarData","icon","MeetingRoom","CName","Dashboard","CreateNewFolder","sidebar","setSidebar","showSidebar","MenuRounded","MenuOpenRounded","item","ExitToApp","Appbar","AccountCircle","StyledTableCell","withStyles","head","common","white","StyledTableRow","action","ResponsesTable","resp","Responses","setResponses","getResponses","finalResponse","App","mainQuizCode","createUserInDB","metadata","lastSignInTime","creationTime","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6aa47741.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAp0IB-zmCINEGEYt7Hjru2ptOa_R9Rjrg\",\n  authDomain: \"the-other-side-e1c97.firebaseapp.com\",\n  projectId: \"the-other-side-e1c97\",\n  storageBucket: \"the-other-side-e1c97.appspot.com\",\n  messagingSenderId: \"1018488103082\",\n  appId: \"1:1018488103082:web:5d289c572205777652b0d3\",\n  measurementId: \"G-GN4J8VJEBB\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\nfirebase.auth();\n\nexport default firebase;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"./LoadingScreen.css\";\n\nconst LoadingScreen = () => {\n  return (\n    <div className=\"loading\">\n      <h1 className=\"blue\" style={{ fontSize: \"5rem\" }}>\n          <b style={{ fontweight: 600 }}>Quiz</b>It\n      </h1>\n      {/* <Loader color=\"#29455a\" width={130} height={130}  type=\"audio\" /> */}\n      <Loader color=\"#29455a\" width={130} height={130} type=\"BallTriangle\" />\n      {/* <Loader color=\"#29455a\" width={130} height={130}  type=\"Puff\" /> */}\n      {/* <Loader color=\"#29455a\" width={130} height={130} type=\"Bars\" /> */}\n      {/* <Loader color=\"#29455a\" width={130} height={130}  type=\"Circles\" /> */}\n    </div>\n  );\n};\nexport default LoadingScreen;\n","import React, {useState, useEffect} from \"react\";\nimport \"./Home.css\";\nimport {StyledFirebaseAuth} from \"react-firebaseui\";\nimport firebase from \"../../firebase/firebase\";\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\n\n\nconst Home = ({setUser}) => {\n\n    const [loading, setLoading] = useState(true);\n\n    const uiConfig = {\n        signInflow: \"popup\",\n        signInOptions: [\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            firebase.auth.EmailAuthProvider.PROVIDER_ID,\n        ],\n        callbacks: {\n            signInSuccessWithAuthResult: () => false,\n        },\n    };\n\n    useEffect(() => {\n        let isMounted = true;\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user && isMounted) {\n                setUser({\n                    uid: firebase.auth().currentUser.uid,\n                    name: firebase.auth().currentUser.displayName,\n                    email: firebase.auth().currentUser.email,\n                });\n                console.log(\"User Logged In\");\n            } else {\n                console.log(\"User Signed Out\");\n                setUser({});\n            }\n            console.log(\"auth change\");\n            if (isMounted) setLoading(false);\n        });\n\n        return () => (isMounted = false);\n\n    }, [setUser]);\n\n    return (\n        <>\n            {loading ? (\n                <LoadingScreen/>\n            ) : (\n                <div id=\"Home\">\n\n                    <div id=\"logo\">\n                        <div id=\"logo-name\">\n                            <b style={{ fontweight: 600 }}>Quiz</b>It\n                        </div>\n                        <div id=\"description\">\n                        </div>\n                    </div>\n\n                    <div id=\"login-card\">\n                        <label className=\"login-label\">\n                            <b>Login</b>\n                        </label>\n                        <StyledFirebaseAuth\n                            borderRadius=\"40px\"\n                            uiConfig={uiConfig}\n                            firebaseAuth={firebase.auth()}\n                        />}\n                    </div>\n\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./OneTimeDashboard.css\";\n\nconst OneTimeDashboard = ({ user }) => {\n  const [path, setPath] = useState(\"\");\n  // Path Redirection\n  const onDashboard = () => setPath(\"/dashboard\");\n  const onCreateQuiz = () => setPath(\"/create-quiz\");\n  const onJoinQuiz = () => setPath(\"/join-quiz\");\n\n  if (path.length > 0) return <Redirect push to={path} />;\n\n  return (\n    <div className=\"one-time-dashboard\">\n      <div id=\"dashboard-content\">\n        <div className=\"dash-btns\">\n          <h1 className=\"white\">\n            <b style={{ fontweight: 600 }}>Quiz</b>It\n          </h1>\n          <button className=\"button one-time-button\" onClick={onDashboard}>\n            Dashboard\n          </button>\n          <button className=\"button one-time-button\" onClick={onCreateQuiz}>\n            Create Quiz\n          </button>\n          <button className=\"button one-time-button\" onClick={onJoinQuiz}>\n            Join Quiz\n          </button>\n        </div>\n        <div className=\"blob-svg\">\n          <svg\n            className=\"blob-1\"\n            viewBox=\"0 0 200 200\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fill=\"#FFE6E6\"\n              d=\"M55.6,-59.6C71.1,-53.2,82.1,-34.8,85.2,-15.3C88.2,4.2,83.3,24.7,73,41.7C62.7,58.6,46.8,72,29.8,75.4C12.7,78.9,-5.7,72.5,-21.3,64.3C-36.8,56.1,-49.6,46,-55.3,33.3C-61,20.6,-59.6,5.2,-56.6,-9.6C-53.6,-24.4,-48.8,-38.4,-39.1,-45.8C-29.4,-53.2,-14.7,-53.8,2.7,-57C20,-60.2,40.1,-65.9,55.6,-59.6Z\"\n              transform=\"translate(100 100)\"\n            />\n          </svg>\n\n          <svg\n            className=\"blob-3\"\n            viewBox=\"0 0 200 200\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fill=\"#FFE6E6\"\n              d=\"M37.2,-46.1C50.9,-32.8,66.5,-23.6,68.1,-12.3C69.8,-0.9,57.5,12.6,48.4,27.5C39.3,42.4,33.3,58.7,22.7,62.7C12.1,66.7,-3,58.3,-21.7,54C-40.3,49.6,-62.5,49.2,-72.9,38.5C-83.4,27.8,-82.2,6.8,-75.6,-10.4C-69.1,-27.5,-57.2,-40.7,-43.7,-54C-30.2,-67.3,-15.1,-80.6,-1.7,-78.6C11.8,-76.6,23.5,-59.3,37.2,-46.1Z\"\n              transform=\"translate(100 100)\"\n            />\n          </svg>\n\n\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OneTimeDashboard;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Modal, Icon, IconButton } from \"@material-ui/core\";\nimport \"./AddQuestionModal.css\";\nimport { DeleteRounded, EditRounded, SaveRounded } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // margin: \"10px\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    outline: 0,\n    width: \"90%\",\n    borderRadius: \"10px\",\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n}));\n\nexport default function AddQuestionModal({\n  type = \"add\",\n  title = \"\",\n  opType = \"radio\",\n  opArray,\n  index = -1,\n  addQuestionHandle,\n}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [optionType, setOptionType] = useState(\"radio\");\n  const [optionsArray, setOptionsArray] = useState([]);\n  const [editedOption, setEditedOption] = useState(null);\n  const [editOpIndex, setEditOpIndex] = useState(-1);\n  const [titleField, setTitleField] = useState(\"\");\n  const optionsRef = useRef(null);\n  const checkBoxRef = useRef(null);\n\n  useEffect(() => {\n    if (open) {\n      setTitleField(title);\n      setOptionType(opType);\n      if (opArray) setOptionsArray(opArray);\n    } else {\n      setTitleField(\"\");\n      setOptionsArray([]);\n      setOptionType(\"radio\");\n    }\n  }, [open, title, opType, opArray]);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const addQuestionCallBack = () => {\n    const tempArr = [...optionsArray];\n    if (optionsRef.current.value.length !== 0) {\n      // For radio options, set all other options incorrect\n      if (optionType === \"radio\" && checkBoxRef.current.checked)\n        tempArr.forEach((op) => (op.isCorrect = false));\n\n      tempArr.push({\n        text: optionsRef.current.value,\n        isCorrect: checkBoxRef.current.checked,\n      });\n    }\n    // Error Handling\n    if (!titleField.length && optionsArray.length < 2) {\n      alert(\"Please add Question and atleast 2 options.\");\n      return;\n    } else if (!titleField.length) {\n      alert(\"Please add Question.\");\n      return;\n    } else if (optionsArray.length < 2) {\n      alert(\"Number of Options must be greater than 1.\");\n      return;\n    }\n    const correctOp = optionsArray.filter((op) => op.isCorrect);\n    if (correctOp.length < 1) {\n      alert(\"No correct option was selected.\");\n      return;\n    }\n    if (index !== -1) addQuestionHandle(titleField, optionType, tempArr, index);\n    else addQuestionHandle(titleField, optionType, tempArr);\n\n    setOpen(false);\n  };\n\n  const addOption = () => {\n    if (optionsRef.current.value.length === 0) return;\n\n    const arr = [...optionsArray];\n    if (\n      optionsArray.findIndex((op) => op.text === optionsRef.current.value) !==\n      -1\n    ) {\n      alert(\"Option already exists.\");\n      return;\n    }\n    if (optionType === \"radio\" && checkBoxRef.current.checked)\n      // For radio options, set all other options incorrect\n      arr.forEach((op) => (op.isCorrect = false));\n\n    arr.push({\n      text: optionsRef.current.value,\n      isCorrect: checkBoxRef.current.checked,\n    });\n    optionsRef.current.value = \"\";\n    checkBoxRef.current.checked = false;\n    setOptionsArray(arr);\n  };\n  const handleTypeChange = (e) => setOptionType(e.target.value);\n\n  const deleteHandler = (ind) => {\n    const temp = [...optionsArray];\n    temp.splice(ind, 1);\n    setOptionsArray(temp);\n    setEditOpIndex(-1);\n  };\n\n  const handleEdit = (ind) => {\n    if (editOpIndex === -1) {\n      setEditOpIndex(ind);\n      setEditedOption(optionsArray[ind].text);\n    }\n  };\n\n  const saveEdited = () => {\n    const temp = [...optionsArray];\n    temp[editOpIndex].text = editedOption;\n    setOptionsArray(temp);\n    setEditOpIndex(-1);\n  };\n\n  return (\n    <div className={classes.root}>\n      {type === \"add\" ? (\n        <button className=\"button\" onClick={handleOpen}>\n          Add Question\n        </button>\n      ) : (\n        <IconButton onClick={handleOpen}>\n          <EditRounded />\n        </IconButton>\n      )}\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        disableEnforceFocus={true}\n      >\n        <div className={classes.paper}>\n          <div className=\"questionCard\">\n            <div id=\"title\">Question:</div>\n            <input\n              type=\"text\"\n              autoFocus\n              value={titleField}\n              onChange={(e) => setTitleField(e.target.value)}\n              className=\"input-text question\"\n              placeholder=\"Type Question Here\"\n            />\n            <select\n              id=\"select\"\n              placeholder=\"Select\"\n              onChange={handleTypeChange}\n            >\n              <option className=\"selectOp\" value=\"radio\">\n                Single Answer\n              </option>\n              <option className=\"selectOp\" value=\"check\">\n                Multiple Answers\n              </option>\n            </select>\n\n            <div className=\"option-div\">\n              <div className=\"options\" id=\"one-op\">\n                {optionsArray.map((option, ind) => (\n                  <div className=\"option\" key={ind}>\n                    <input\n                      type={optionType === \"radio\" ? \"radio\" : \"checkbox\"}\n                      disabled={true}\n                      className=\"radio-in\"\n                      name=\"option\"\n                      checked={option.isCorrect}\n                    />\n                    {editOpIndex === ind ? (\n                      <input\n                        value={editedOption}\n                        onChange={(e) => setEditedOption(e.target.value)}\n                      />\n                    ) : (\n                      <div className=\"add-op\">{option.text}</div>\n                    )}\n                    {editOpIndex === ind ? (\n                      <Icon className=\"save-icon\" onClick={() => saveEdited()}>\n                        <SaveRounded />\n                      </Icon>\n                    ) : (\n                      <Icon\n                        className=\"edit-icon\"\n                        onClick={() => handleEdit(ind)}\n                      >\n                        <EditRounded />\n                      </Icon>\n                    )}\n                    <Icon\n                      className=\"delete-icon\"\n                      onClick={() => {\n                        deleteHandler(ind);\n                      }}\n                    >\n                      <DeleteRounded />\n                    </Icon>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"add-op\">\n              <div>\n                <input\n                  type={optionType === \"radio\" ? \"radio\" : \"checkbox\"}\n                  ref={checkBoxRef}\n                  className=\"radio-in\"\n                  name=\"option\"\n                />\n                <input\n                  type=\"text\"\n                  ref={optionsRef}\n                  className=\"input-text op-text\"\n                  placeholder={`Option ${optionsArray.length + 1}`}\n                />\n              </div>\n              <input\n                type=\"submit\"\n                className=\"add-btn\"\n                value=\"+ Add\"\n                onClick={addOption}\n              />\n            </div>\n          </div>\n          <div className={classes.buttons}>\n            <button className=\"add-btn\" onClick={handleClose}>\n              Close\n            </button>\n            <button\n              // disabled={!(optionsArray.length && titleField.length)}\n              className=\"button\"\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={addQuestionCallBack}\n            >\n              {type === \"add\" ? \"Add \" : \"Edit \"}\n              Question\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete } from \"@material-ui/icons\";\nimport AddQuestionModal from \"./AddQuestionModal/AddQuestionModal\";\n\nfunction createData(title, options, choice) {\n  return { title, options, choice };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"title\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Question\",\n  },\n  { id: \"options\", numeric: true, disablePadding: false, label: \"Options\" },\n  { id: \"choice\", numeric: true, disablePadding: false, label: \"Choice\" },\n  { id: \"edit\", numeric: true, disablePadding: false, label: \"Edit\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {\n    numSelected,\n    selected,\n    setSelected,\n    questionArray,\n    setQuestionArray,\n  } = props;\n\n  const deleteRow = () => {\n    const temp = [...questionArray];\n    // Delete the selected rows from QuestionsArray\n    selected.forEach((element) => {\n      const target = temp.findIndex((e) => e.title === element);\n      temp.splice(target, 1);\n    });\n\n    setQuestionArray(temp);\n    setSelected([]);\n  };\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          QUESTIONS\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <IconButton onClick={deleteRow} aria-label=\"delete\">\n          <Delete />\n        </IconButton>\n      ) : null}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  selected: PropTypes.array,\n  setSelected: PropTypes.func,\n  questionArray: PropTypes.array,\n  setQuestionArray: PropTypes.func,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"95%\",\n    margin: \"5px\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function QuestionsTable({ questionArray, setQuestionArray }) {\n  const rows = questionArray.map((question) =>\n    createData(question.title, question.options, question.optionType)\n  );\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(1);\n\n  const editQuestionHandle = (title, optionType, options, index) => {\n    const temp = [...questionArray];\n    temp[index] = { title, optionType, options };\n    setQuestionArray(temp);\n  };\n\n  // const rowsPerPage = 1;\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.title);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n\n  const handleChangeRowsPerPage = (event) => {\n  \tsetRowsPerPage(parseInt(event.target.value, 10));\n  \tsetPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          numSelected={selected.length}\n          selected={selected}\n          setSelected={setSelected}\n          questionArray={questionArray}\n          setQuestionArray={setQuestionArray}\n        />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size=\"small\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.title);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.title}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          onClick={(event) => handleClick(event, row.title)}\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.title}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.options.length}</TableCell>\n                      <TableCell align=\"right\">\n                        {row.choice === \"radio\" ? \"Single\" : \"Multiple\"}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <AddQuestionModal\n                          key={index}\n                          type=\"edit\"\n                          title={row.title}\n                          opType={row.choice}\n                          opArray={row.options}\n                          index={index}\n                          addQuestionHandle={editQuestionHandle}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 33 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[1]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./CreateQuiz.css\";\nimport AddQuestionModal from \"../../components/AddQuestionModal/AddQuestionModal\";\nimport QuestionsTable from \"../../components/QuestionsTable\";\nimport { Switch } from \"@material-ui/core\";\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\n\nconst CreateQuiz = ({\n  user,\n  quizTitle,\n  questions,\n\n  isOpen,\n  editQuizHandle,\n}) => {\n  const [questionArray, setQuestionArray] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [access, setAccesss] = useState(true);\n  const [loading, setLoading] = useState(\"stop\");\n  const [quizCode, setQuizCode] = useState(null);\n\n  const addQuestionHandle = (title, optionType, options) => {\n    const arr = [...questionArray];\n    arr.push({ title, optionType, options });\n    setQuestionArray(arr);\n  };\n  useEffect(() => {\n    if (quizTitle) {\n      setTitle(quizTitle);\n      setQuestionArray(questions);\n      setAccesss(isOpen);\n    }\n  }, [quizTitle, questions, isOpen]);\n\n  const createQuiz = async () => {\n    if (!(title.length || questionArray.length)) {\n      alert(\"Please add title and questions.\");\n      return;\n    } else if (!title.length) {\n      alert(\"Please add Quiz title.\");\n      return;\n    } else if (!questionArray.length) {\n      alert(\"Please add any questions.\");\n      return;\n    }\n    console.log(\"Quiz Creation Starts...\");\n    setLoading(\"start\");\n    try {\n      const result = await fetch(\"/API/quizzes/create\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          title,\n          uid: user.uid,\n          questions: questionArray,\n          isOpen: access,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(\"Quiz posted ! \");\n      const body = await result.json();\n      console.log(\"Quiz Code : \", body.quizId);\n      setQuizCode(body.quizId);\n    } catch (e) {\n      console.log(\"Quiz creation error : \", e);\n      setLoading(\"error\");\n    }\n  };\n  if (quizCode)\n    return <Redirect push to={`/created-succesfully/${quizCode}`} />;\n\n  if (loading === \"start\") return <LoadingScreen />;\n\n  return (\n    <div id=\"main-body\">\n      <div id=\"create-quiz-body\">\n        <div className=\"quiz-header\">\n          <input\n            type=\"text\"\n            className=\"input-text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            id=\"quiz-title\"\n            placeholder=\"Untitled Quiz\"\n            autoFocus\n            autocomplete=\"off\"\n          />\n        </div>\n        <div className=\"controls\">\n          <AddQuestionModal addQuestionHandle={addQuestionHandle} />\n          <div className=\"switch\">\n            <Switch\n              checked={access}\n              onChange={(e) => setAccesss(e.target.checked)}\n              color=\"secondary\"\n              name=\"access\"\n            />\n            <h4>{access ? \"Public\" : \"Private\"}</h4>\n          </div>\n        </div>\n      </div>\n      <div className=\"questionTable\">\n        <QuestionsTable\n          questionArray={questionArray}\n          setQuestionArray={setQuestionArray}\n        />\n      </div>\n      <div>\n        {quizTitle && (\n          <button className=\"add-btn\" onClick={() => editQuizHandle()}>\n            Close\n          </button>\n        )}\n        <button\n          // disabled={!(title.length && questionArray.length)}\n          className=\"button wd-200\"\n          onClick={() => {\n            if (quizTitle) editQuizHandle(title, questionArray, access);\n            else createQuiz();\n          }}\n        >\n          {quizTitle ? \"Save \" : \"Create \"}\n          Quiz\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateQuiz;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./JoinQuiz.css\";\n\nconst JoinQuiz = () => {\n  const [valid, setValid] = useState(\"false\");\n  const [code, setCode] = useState(\"\");\n\n  const handleJoinQuiz = () => {\n    if (code.length) setValid(\"attempt-quiz\");\n  };\n  if (valid !== \"false\") return <Redirect push to={`/${valid}/${code}`} />;\n  return (\n    <div id=\"join-quiz\">\n      <div id=\"join-quiz-div\">\n        <div id=\"logo-name\">\n          <b style={{ fontweight: 600 }}>Quiz</b>It\n        </div>\n\n        <input\n          value={code}\n          onChange={(e) => setCode(e.target.value)}\n          id=\"q-code\"\n          type=\"text\"\n          placeholder=\"Enter Quiz Code\"\n          autoFocus\n          onKeyPress={(event) => {\n            if (event.key === \"Enter\") handleJoinQuiz();\n          }}\n        />\n        <button className=\"join-button\" onClick={handleJoinQuiz}>\n          Join Quiz\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default JoinQuiz;\n","import { IconButton } from \"@material-ui/core\";\nimport { EditRounded } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./QuizCard.css\";\n\nconst CreatedQuizCard = ({\n  title,\n  responses,\n  code,\n  questions,\n  isOpen,\n  index,\n  setEditQuiz,\n}) => {\n  return (\n    <div className=\"quiz-card\">\n      <div>\n        <h1 id=\"created-quiz-title\">{title}</h1>\n        <p className=\"card-code\">Code: {code}</p>\n      </div>\n      <div id=\"horizontal-line\"></div>\n      <div id=\"row\">\n        <div id=\"responses\">\n          <Link to={`/responses/${code}`} style={{ fontWeight: \"bold\" }}>\n            Responses : {responses}\n          </Link>\n        </div>\n        <div id=\"questions\">Questions : {questions}</div>\n      </div>\n      <div className=\"bottom-bar\">\n        {isOpen ? <div id=\"open\">open</div> : <div id=\"closed\">closed</div>}\n        <IconButton onClick={() => setEditQuiz([index])}>\n          <EditRounded />\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nexport default CreatedQuizCard;\n","import React from \"react\";\nimport \"./QuizCard.css\";\n\nconst JoinedQuizCard = ({ title, score, questions }) => {\n  return (\n    <div className=\"quiz-card\">\n      <h1 id=\"created-quiz-title\">{title}</h1>\n      <div id=\"horizontal-line\"></div>\n      <div id=\"row\">\n        <div id=\"responses\">Score : {score}</div>\n        <div id=\"questions\">Questions : {questions}</div>\n      </div>\n      <div id=\"open\"></div>\n    </div>\n  );\n};\n\nexport default JoinedQuizCard;\n","import React, { useState, useEffect } from \"react\";\nimport \"./UserDashBoard.css\";\nimport CreatedQuizCard from \"../../components/QuizCard/CreatedQuizCard\";\nimport JoinedQuizCard from \"../../components/QuizCard/JoinedQuizCard\";\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\nimport CreateQuiz from \"../CreateQuiz/CreateQuiz\";\n\nconst UserDashboard = ({ user }) => {\n  const [createdQuizzes, setCreatedQuizzes] = useState([]);\n  const [attemptedQuizzes, setAttemptedQuizzes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editQuiz, setEditQuiz] = useState([]);\n  // Fetch Data from the API\n  useEffect(() => {\n    if (!user.uid) {\n      setLoading(false);\n      return;\n    }\n    const fetchQuizData = async () => {\n      const results = await fetch(`/API/users/${user.uid}`);\n      const quizData = await results.json();\n      if (quizData.createdQuiz) setCreatedQuizzes(quizData.createdQuiz);\n      if (quizData.attemptedQuiz) setAttemptedQuizzes(quizData.attemptedQuiz);\n      setLoading(false);\n    };\n    if (user) fetchQuizData();\n  }, [user]);\n\n  const editQuizHandle = async (title, questions, isOpen) => {\n    if (!title) setEditQuiz([]);\n    else {\n      setLoading(true);\n      console.dir({\n        quizId: createdQuizzes[editQuiz]._id,\n        uid: user.uid,\n        title,\n        questions,\n        isOpen,\n      });\n      const results = await fetch(\"/API/quizzes/edit\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          quizId: createdQuizzes[editQuiz]._id,\n          uid: user.uid,\n          title,\n          questions,\n          isOpen,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const submitData = await results.json();\n      console.dir(submitData);\n      const temp = [...createdQuizzes];\n      temp[editQuiz[0]].title = title;\n      temp[editQuiz[0]].questions = questions;\n      temp[editQuiz[0]].isOpen = isOpen;\n      setCreatedQuizzes(temp);\n      setEditQuiz([]);\n      setLoading(false);\n    }\n  };\n\n  if (loading) return <LoadingScreen />;\n\n  if (editQuiz.length)\n    return (\n      <CreateQuiz\n        user={user}\n        quizTitle={createdQuizzes[editQuiz].title}\n        questions={createdQuizzes[editQuiz].questions}\n        isOpen={createdQuizzes[editQuiz].isOpen}\n        editQuizHandle={editQuizHandle}\n      />\n    );\n  return (\n    <div className=\"dash-body\">\n      <div className=\"quizzes\">\n        <div className=\"heading\">\n          <div className=\"line-left\" />\n          <h2>Created </h2>\n          <div className=\"line\" />\n        </div>\n        <div className=\"card-holder\">\n          {createdQuizzes.map((quiz, key) => (\n            <CreatedQuizCard\n              key={key}\n              index={key}\n              setEditQuiz={setEditQuiz}\n              title={quiz.title}\n              code={quiz._id}\n              responses={quiz.responses}\n              questions={quiz.questions.length}\n              isOpen={quiz.isOpen}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"quizzes\">\n        <div className=\"heading\">\n          <div className=\"line-left\" />\n          <h2>Attempted </h2>\n          <div className=\"line\" />\n        </div>\n        <div className=\"card-holder\">\n          {attemptedQuizzes.map((quiz, key) => (\n            <JoinedQuizCard\n              key={key}\n              title={quiz.title}\n              score={quiz.responses[0].score}\n              questions={quiz.totalQuestions}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./CreatedSuccesfully.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nconst CreatedSuccesfully = ({ match }) => {\n  const [Copy, setCopy] = useState(\"copy\");\n  return (\n    <div id=\"created-quiz\">\n      <div id=\"created-quiz-div\">\n        <div id=\"message\">\n          <h2 className=\"b\">Quiz Created Successfully!</h2>\n          <p>Share the follwong code with your students</p>\n        </div>\n        <input\n          type=\"text\"\n          // className='input-text'\n          id={Copy}\n          value={match.params.quizCode}\n          disabled={true}\n          // onChange={(e) => {}}\n        />\n        <CopyToClipboard\n          text={match.params.quizCode}\n          onCopy={() => {\n            setCopy(\"copied\");\n          }}\n        >\n          <button className=\"button wd-200\">\n            {Copy === \"copy\" ? \"Copy Code\" : \"Code Copied!\"}\n          </button>\n        </CopyToClipboard>\n        <Link to={\"/dashboard\"}>\n          <button className=\"button wd-200\">Dashboard</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\nexport default CreatedSuccesfully;\n","import {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nconst NotFoundPage = () => {\n    return (\n        <div className=\"loading\">\n            <h1>404 Page Not Found!</h1>\n            <div id=\"logo-name\">\n                The<b> Other </b> Side\n            </div>\n            <h3>\n                <Link to=\"/\">Click here</Link> and\n                Go back to the Dashboard.\n            </h3>\n        </div>\n    );\n};\n\nexport default NotFoundPage;\n","import React, { useState, useEffect } from 'react'\nimport { Modal } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n   root: {\n      // margin: \"10px\",\n   },\n   modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      textAlign: 'center',\n   },\n   paper: {\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(10, 10),\n      borderRadius: '20px',\n      // display:\"flex\",\n      // alignItems:\"center\",\n   },\n   buttons: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n   },\n}))\n\nconst AttemptedModal = ({ result, totalScore, showModal, uid }) => {\n   const classes = useStyles()\n   const [open, setOpen] = useState(showModal)\n   const [maxScoreLocal, setMaxScoreLocal] = useState(0)\n   const [isNewRecord, setIsNewRecord] = useState(false)\n\n   useEffect(() => {\n      setOpen(showModal)\n      const checkNewRecord = async () => {\n         const res = await fetch(`/API/users/${uid}/maxScore`, {\n            method: 'GET',\n            headers: {\n               'Content-Type': 'application/json',\n            },\n         })\n         let resJson = await res.json()\n         const { maxScore } = resJson\n         setMaxScoreLocal(maxScore)\n      }\n      checkNewRecord()\n      if (result.score > maxScoreLocal) {\n         setIsNewRecord(true)\n      }\n   }, [showModal])\n\n   return (\n      <div className={classes.root}>\n         <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className={classes.modal}\n            open={open}\n            disableEnforceFocus={true}\n         >\n            <div className={classes.paper}>\n               <h2>Quiz Attempted Successfully.</h2>\n               <h1 className=\"score_h2\">\n                  {result.error\n                     ? 'Not Submitted ! '\n                     : `Score: ${parseInt(result.score, 10).toFixed(\n                          0,\n                       )}/${totalScore}`}\n               </h1>\n               <h1 className=\"score_h2\">\n                  {isNewRecord === true\n                     ? 'Great! You have achieved new record!'\n                     : `Maybe next time `}\n               </h1>\n\n               <Link to={'/'}>\n                  <button className=\"button wd-200\">Main Menu</button>\n               </Link>\n            </div>\n         </Modal>\n      </div>\n   )\n}\n\nexport default AttemptedModal\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport firebase from '../../firebase/firebase'\nimport LoadingScreen from '../LoadingScreen/LoadingScreen'\nimport AttemptedModal from './AttemptedModal'\nimport Popup from 'reactjs-popup'\nimport './Attempted.css'\nimport 'reactjs-popup/dist/index.css'\nimport '../../components/Popup/Popup.css'\n\nconst AttemptQuiz = ({ match }) => {\n   const quizCode = match.params.quizCode\n   const [path, setPath] = useState('')\n   const [questions, setQuestions] = useState([])\n   const [attemptedQuestions, setAttemptedQuestions] = useState([])\n   const [quizTitle, setQuizTitle] = useState('')\n   const [quizCorrectAnswers, setQuizCorrectAnswers] = useState([])\n   const [loading, setLoading] = useState(true)\n   const [result, setResult] = useState({})\n   const [showModal, setShowModal] = useState(false)\n   const [currQuestionIndex, setCurrQuestionIndex] = useState(0)\n   const [questionsPerPage, setQuestionsPerPage] = useState(1)\n   const [selected, setSelected] = useState('false')\n   const [showFeedback, setShowFeedback] = useState(false)\n   const uid = firebase.auth().currentUser.uid\n\n   useEffect(() => {\n      const fetchQuiz = async () => {\n         const res = await fetch('/API/quizzes/join', {\n            method: 'POST',\n            body: JSON.stringify({ quizId: quizCode, uid }),\n            headers: {\n               'Content-Type': 'application/json',\n            },\n         })\n         const quizData = await res.json()\n         setLoading(false)\n         if (quizData.error) setQuizTitle(quizData.error)\n         else {\n            setQuizTitle(quizData.title)\n            setQuestions(quizData.questions)\n            setQuizCorrectAnswers(quizData.answers)\n            const temp = quizData.questions.map((question) => {\n               return {\n                  id: question.id,\n                  title: question.title,\n                  optionType: question.optionType,\n                  selectedOptions: [],\n               }\n            })\n            console.log('AttemptedQuiz line 43 AttemptedQuestions: ', temp)\n            setAttemptedQuestions(temp)\n         }\n      }\n\n      const fetchUserPostionInQuiz = async () => {\n         const res = await fetch(`/API/users/${uid}/lastQuestion`, {\n            method: 'GET',\n            headers: {\n               'Content-Type': 'application/json',\n            },\n         })\n         let resJson = await res.json()\n         const { lastQuestion } = resJson\n         setCurrQuestionIndex(lastQuestion)\n         return lastQuestion\n      }\n\n      fetchQuiz()\n      fetchUserPostionInQuiz()\n   }, [quizCode, uid])\n\n   const handleOptionSelect = (e, option, index) => {\n      console.log('handleOptionSelect')\n      const temp = [...attemptedQuestions]\n      const options = temp[index].selectedOptions\n      console.log('index:' + index)\n      if (!options.includes(option) && e.target.checked) {\n         if (attemptedQuestions[index].optionType === 'radio')\n            options[0] = option\n         else options.push(option)\n      }\n      if (options.includes(option) && !e.target.checked) {\n         const i = options.indexOf(option)\n         options.splice(i, 1)\n      }\n      temp[index].selectedOptions = options\n      console.log('TEMP[index]:' + temp)\n      console.log('AttemptedQuiz line 80 AttemptedQuestions: ', temp)\n      setAttemptedQuestions(temp)\n   }\n\n   const isRadioSelected = (value) => selected === value\n\n   const handleRadioClick = (e) => {\n      console.log('AttemptQuiz line 87: ', e.currentTarget.value)\n      setSelected(e.currentTarget.value)\n   }\n\n   const submitQuiz = async () => {\n      // send attemped Questions to backend\n      try {\n         const res = await fetch('/API/quizzes/submit', {\n            method: 'POST',\n            body: JSON.stringify({\n               uid,\n               quizId: quizCode,\n               questions: attemptedQuestions,\n            }),\n            headers: {\n               'Content-Type': 'application/json',\n            },\n         })\n         const body = await res.json()\n         setResult(body)\n         setShowModal(true)\n         console.log('res body : ', body)\n      } catch (e) {\n         console.log('Error Submitting quiz', e)\n      }\n   }\n\n   const onNextQuestion = () => {\n      setSelected('false')\n      setCurrQuestionIndex(currQuestionIndex + 1)\n   }\n\n   const onPauseGame = async () => {\n      setPath('/')\n      try {\n         const res = await fetch('/API/users/paused', {\n            method: 'POST',\n            body: JSON.stringify({\n               uid,\n               lastQuestion: currQuestionIndex,\n            }),\n            headers: {\n               'Content-Type': 'application/json',\n            },\n         })\n      } catch (e) {\n         console.log('Error posting quiz checkpoint', e)\n      }\n   }\n\n   if (loading) return <LoadingScreen />\n\n   if (path.length !== 0) return <Redirect push to={path} />\n   // For Quiz not Found\n   if (quizTitle === 'ERR:QUIZ_NOT_FOUND')\n      return (\n         <div className=\"loading\">\n            <h1>404 Quiz Not Found!</h1>\n            <div id=\"logo-name\">\n               <b>Quiz</b>App\n            </div>\n            <h3>\n               Go back to <Link to=\"/join-quiz\">Join Quiz </Link>Page.\n            </h3>\n         </div>\n      )\n   // For Quiz not accessible\n   else if (quizTitle === 'ERR:QUIZ_ACCESS_DENIED')\n      return (\n         <div className=\"loading\">\n            <h2>\n               Quiz Access is Not Granted by the Creator. Please contact Quiz\n               Creator.\n            </h2>\n            <div id=\"logo-name\">\n               <b>Quiz</b>App\n            </div>\n            <h3>\n               Go back to <Link to=\"/join-quiz\">Join Quiz </Link>Page.\n            </h3>\n         </div>\n      )\n   else if (quizTitle === 'ERR:QUIZ_ALREADY_ATTEMPTED')\n      return (\n         <div className=\"loading\">\n            <h2>You have already taken the Quiz.</h2>\n            <div id=\"logo-name\">\n               <b>Quiz</b>App\n            </div>\n            <h3>\n               Go back to <Link to=\"/join-quiz\">Join Quiz </Link>Page.\n            </h3>\n         </div>\n      )\n   else {\n      const currPageQuestions = questions.slice(\n         currQuestionIndex,\n         currQuestionIndex + questionsPerPage,\n      )\n      return (\n         <div id=\"main-body\">\n            <div id=\"create-quiz-body\">\n               <div className=\"quiz-header\">\n                  <h2>{quizTitle}</h2>\n               </div>\n               {currPageQuestions.map((question, index) => (\n                  <div className=\"attempQuestionCard\" key={index}>\n                     <div id=\"title\">{question.title}</div>\n                     <div className=\"option-div\">\n                        {question.options.map((option, buttonIndex) => (\n                           <div className=\"option\" key={buttonIndex}>\n                              {question.optionType === 'radio' ? (\n                                 <input\n                                    type=\"radio\"\n                                    name=\"react-radio-btn\"\n                                    value={`option${buttonIndex}`}\n                                    checked={isRadioSelected(\n                                       `option${buttonIndex}`,\n                                    )}\n                                    onChange={(e) => {\n                                       handleRadioClick(e)\n                                       handleOptionSelect(\n                                          e,\n                                          option.text,\n                                          currQuestionIndex,\n                                       )\n                                    }}\n                                 />\n                              ) : (\n                                 <input\n                                    type=\"checkbox\"\n                                    name=\"option\"\n                                    onChange={(e) =>\n                                       handleOptionSelect(e, option.text, index)\n                                    }\n                                 />\n                              )}\n                              <label className=\"label-answers\">\n                                 {option.text}\n                              </label>\n                           </div>\n                        ))}\n                     </div>\n                  </div>\n               ))}\n\n               {currQuestionIndex === questions.length - 1 && (\n                  <button className=\"button wd-200\" onClick={submitQuiz}>\n                     Submit\n                  </button>\n               )}\n               {currQuestionIndex !== questions.length - 1 && (\n                  <button className=\"button wd-200\" onClick={onNextQuestion}>\n                     Next Question\n                  </button>\n               )}\n               {currQuestionIndex === 6 && (\n                  <Popup\n                     trigger={\n                        <button className=\"button wd-200\">Bonus I</button>\n                     }\n                  >\n                     <div className=\"popup-content\">\n                        <a\n                           href=\"https://iep.utm.edu/empathy-sympathy-in-ethics/\"\n                           target=\"_blank\"\n                           rel=\"noreferrer\"\n                           style={{ fontSize: '5px' }}\n                        >\n                           I. Watch to gain empathy!\n                        </a>\n                     </div>\n                  </Popup>\n               )}\n               {currQuestionIndex === 13 && (\n                  <Popup\n                     trigger={\n                        <button className=\"button wd-200\">Bonus II</button>\n                     }\n                  >\n                     <div className=\"popup-content\">\n                        <a\n                           href=\"https://youtu.be/1Evwgu369Jw\"\n                           target=\"_blank\"\n                           rel=\"noreferrer\"\n                           style={{ fontSize: '5px' }}\n                        >\n                           II. Watch to gain empathy!\n                        </a>\n                     </div>\n                  </Popup>\n               )}\n               {currQuestionIndex === 19 && (\n                  <Popup\n                     trigger={\n                        <button className=\"button wd-200\">Bonus III</button>\n                     }\n                  >\n                     <div className=\"popup-content\">\n                        <a\n                           href=\"https://en.wikipedia.org/wiki/Empathy\"\n                           target=\"_blank\"\n                           rel=\"noreferrer\"\n                           style={{ fontSize: '5px' }}\n                        >\n                           III. Watch to gain empathy!\n                        </a>\n                     </div>\n                  </Popup>\n               )}\n\n               <button className=\"button wd-200\" onClick={onPauseGame}>\n                  Pause Game\n               </button>\n               <AttemptedModal\n                  result={result}\n                  showModal={showModal}\n                  totalScore={questions.length}\n                  uid={uid}\n               />\n            </div>\n         </div>\n      )\n   }\n}\n\nexport default AttemptQuiz\n","import React, { useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport './Sidebar.css'\nimport firebase from '../../firebase/firebase'\nimport { Icon } from '@material-ui/core'\nimport {\n   CreateNewFolder,\n   Dashboard,\n   ExitToApp,\n   MeetingRoom,\n   MenuOpenRounded,\n   MenuRounded,\n   PermMedia,\n   Policy,\n} from '@material-ui/icons'\n\nfunction Sidebar() {\n   const [signOut, setSignOut] = useState(false)\n   const SidedbarData = [\n      {\n         title: 'Main Menu',\n         path: '/',\n         icon: <MeetingRoom />,\n         CName: 'nav-text',\n      },\n      {\n         title: 'Dashboard',\n         path: '/dashboard',\n         icon: <Dashboard />,\n         CName: 'nav-text',\n      },\n      {\n         title: 'Join Quiz',\n         path: '/join-quiz',\n         icon: <MeetingRoom />,\n         CName: 'nav-text',\n      },\n      {\n         title: 'Create Quiz',\n         path: '/create-quiz',\n         icon: <CreateNewFolder />,\n         CName: 'nav-text',\n      },\n   ]\n   const [sidebar, setSidebar] = useState(false)\n   const showSidebar = () => setSidebar(!sidebar)\n   if (signOut) return <Redirect to=\"/\" />\n\n   return (\n      <div>\n         <Icon className=\"menu-bars\" onClick={showSidebar}>\n            <MenuRounded />\n         </Icon>\n         {/* <FaIcons.FaBars  onClick={} /> */}\n         <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n            <ul className=\"nav-menu-items\" onClick={showSidebar}>\n               <li className=\"navbar-toggle\">\n                  <Icon>\n                     <MenuOpenRounded fontSize=\"large\" />\n                  </Icon>\n               </li>\n               {SidedbarData.map((item, index) => {\n                  return (\n                     <li key={index} className=\"nav-text\">\n                        <Link to={item.path}>\n                           <Icon>{item.icon}</Icon>\n                           <span className=\"nav-item-title\">{item.title}</span>\n                        </Link>\n                     </li>\n                  )\n               })}\n               {/* Sign Out Button */}\n               <li className=\"nav-text sign-out\">\n                  <button\n                     onClick={() => {\n                        console.log('clicked')\n                        // setUser({})\n                        firebase.auth().signOut()\n                        setSignOut(true)\n                     }}\n                  >\n                     <Icon>\n                        <ExitToApp />\n                     </Icon>\n                     <span className=\"nav-item-title\">{'SignOut'}</span>\n                  </button>\n               </li>\n            </ul>\n         </nav>\n      </div>\n   )\n}\n\nexport default Sidebar\n","import React from \"react\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport \"./Appbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"@material-ui/core\";\nimport { AccountCircle } from \"@material-ui/icons\";\nconst Appbar = ({ user, setUser }) => {\n  return (\n    <div className=\"appbar\">\n      <div className=\"slider\">\n        <Sidebar />\n        <Link to=\"/\" className=\"home\">\n            <b style={{ fontweight: 600 }}>Quiz</b>It\n        </Link>\n      </div>\n      <div className=\"appbar-user\">\n        <Icon>\n          <AccountCircle />\n        </Icon>\n        <p>{user.name}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Appbar;\n","import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#d81e5b\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction createData({ name, email, score }) {\n  return { name, email, score };\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n  paper: {\n    borderRadius: 15,\n  },\n});\n\nexport default function ResponsesTable({ responses }) {\n  const classes = useStyles();\n  const rows = responses.map((resp) => createData(resp));\n  return (\n    <TableContainer className={classes.paper} component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Name</StyledTableCell>\n            <StyledTableCell align=\"center\">Email Address</StyledTableCell>\n            <StyledTableCell align=\"right\">Score</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <StyledTableRow key={row.name}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">{row.email}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.score}</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\nimport firebase from \"../../firebase/firebase\";\nimport ResponsesTable from \"../../components/ResponsesTable\";\n\nconst Responses = ({ match }) => {\n  const quizId = match.params.quizCode;\n  const uid = firebase.auth().currentUser.uid;\n  const [loading, setLoading] = useState(true);\n  const [responses, setResponses] = useState([]);\n\n  useEffect(() => {\n    const getResponses = async () => {\n      const res = await fetch(\"/API/quizzes/responses\", {\n        method: \"POST\",\n        body: JSON.stringify({ quizCode: quizId, uid }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const result = await res.json();\n      console.log(result);\n      setResponses(result.finalResponse);\n      setLoading(false);\n    };\n    getResponses();\n  }, [quizId, uid]);\n  console.log(responses);\n  if (loading) return <LoadingScreen />;\n  else\n    return (\n      <div className=\"margin-top\">\n        <h2>Responses</h2>\n        <ResponsesTable responses={responses} />\n      </div>\n    );\n};\n\nexport default Responses;\n","import { Switch, Route } from 'react-router-dom'\nimport React, { useState, useEffect } from 'react'\nimport firebase from './firebase/firebase'\nimport Sound from 'react-sound'\n\n// Stylesheet\nimport './App.css'\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\n// Components\nimport Home from './screens/Home/Home'\nimport OneTimeDashBoard from './screens/OneTimeDashboard/OneTimeDashboard'\nimport CreateQuiz from './screens/CreateQuiz/CreateQuiz'\nimport JoinQuiz from './screens/JoinQuiz/JoinQuiz'\nimport UserDashboard from './screens/UserDashboard/UserDashboard'\nimport CreatedSuccesfully from './screens/CreatedSuccesfully/CreatedSuccesfully'\nimport NotFoundPage from './screens/NotFoundPage'\nimport AttemptQuiz from './screens/Attempted/AttemptQuiz'\nimport Appbar from './components/Appbar/Appbar'\nimport Responses from './screens/Response/Responses'\n\nconst App = () => {\n   const [user, setUser] = useState({})\n   const [mainQuizCode, setMainQuizCode] = useState('631f94860b91454dc86e31c0')\n\n   // useEffect hook is invoked when App component is mounted\n   // Also, when a user's value changes\n   useEffect(() => {\n      const createUserInDB = async () => {\n         if (user.uid) {\n            // Using Firebase Auth Timestamps, check if we need to create a new user in the database\n            if (\n               firebase.auth().currentUser.metadata.lastSignInTime ===\n               firebase.auth().currentUser.metadata.creationTime\n            ) {\n               try {\n                  // Send a post request to the server with the user values\n                  await fetch('/API/users/create', {\n                     method: 'POST',\n                     body: JSON.stringify({\n                        uid: user.uid,\n                        name: user.name,\n                        email: user.email,\n                        attemptedQuiz: [],\n                        lastQuestion: 0,\n                     }),\n                     headers: { 'Content-Type': 'application/json' },\n                  })\n                  console.log('posted')\n               } catch (error) {\n                  console.log('User Creation Error: ', error)\n               }\n            }\n         }\n      }\n      createUserInDB()\n   }, [user])\n\n   return (\n      <div className=\"App\">\n         {!firebase.auth().currentUser ? (\n            <Home setUser={setUser} />\n         ) : (\n            <>\n               <div>\n                  <Appbar user={user} setUser={setUser} />\n               </div>\n               <Switch>\n                  <Route exact path=\"/\">\n                     <OneTimeDashBoard user={user} />\n                  </Route>\n                  <Route path=\"/dashboard\">\n                     <UserDashboard user={user} />\n                  </Route>\n                  <Route path=\"/create-quiz\">\n                     <CreateQuiz user={user} />\n                  </Route>\n                  <Route\n                     path=\"/created-succesfully/:quizCode\"\n                     component={CreatedSuccesfully}\n                  />\n                  <Route path=\"/join-quiz\">\n                     <JoinQuiz user={user} quizCode={mainQuizCode} />\n                  </Route>\n                  <Route\n                     path=\"/attempt-quiz/:quizCode\"\n                     component={AttemptQuiz}\n                  />\n                  <Route path=\"/responses/:quizCode\" component={Responses} />\n                  <Route component={NotFoundPage} />\n               </Switch>\n            </>\n         )}\n      </div>\n   )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n   <BrowserRouter>\n      <React.StrictMode>\n         <App />\n      </React.StrictMode>\n   </BrowserRouter>,\n   document.getElementById('root'),\n)\n"],"sourceRoot":""}